*** In main() Printing the Input Graph ***
In main() newEdge from inFile is: (6, 4, 5) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <6, 4, 5> -> NULL
In main() newEdge from inFile is: (12, 7, 2) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <12, 7, 2> -> <6, 4, 5> -> NULL
In main() newEdge from inFile is: (6, 12, 4) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <12, 7, 2> -> <6, 12, 4> -> <6, 4, 5> -> NULL
In main() newEdge from inFile is: (10, 12, 7) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <12, 7, 2> -> <6, 12, 4> -> <6, 4, 5> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (9, 10, 3) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <12, 7, 2> -> <9, 10, 3> -> <6, 12, 4> -> <6, 4, 5> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (2, 4, 1) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <12, 7, 2> -> <9, 10, 3> -> <6, 12, 4> -> <6, 4, 5> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (9, 11, 5) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <12, 7, 2> -> <9, 10, 3> -> <6, 12, 4> -> <6, 4, 5> -> <9, 11, 5> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (3, 2, 6) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <12, 7, 2> -> <9, 10, 3> -> <6, 12, 4> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (5, 7, 5) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <12, 7, 2> -> <9, 10, 3> -> <6, 12, 4> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (1, 6, 3) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <12, 7, 2> -> <1, 6, 3> -> <9, 10, 3> -> <6, 12, 4> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (8, 6, 2) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <8, 6, 2> -> <12, 7, 2> -> <1, 6, 3> -> <9, 10, 3> -> <6, 12, 4> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (9, 8, 1) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <8, 6, 2> -> <12, 7, 2> -> <1, 6, 3> -> <9, 10, 3> -> <6, 12, 4> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (8, 10, 2) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <9, 10, 3> -> <6, 12, 4> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (5, 4, 4) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (4, 3, 3) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <4, 3, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (1, 2, 5) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <4, 3, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (1, 11, 3) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (3, 5, 2) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (6, 7, 2) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (7, 8, 3) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main() newEdge from inFile is: (1, 4, 5) -> 
In main(). Printing edgeList after insert of new edge:
listHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
*** In main() At the end of printing all edges of the input graph

In main() the nextEdge is: (2, 4, 1) -> 
In main() numSets = 11
Printing whichSet array: 
whichSet Array = [1][2][3][2][5][6][7][8][9][10][11][12]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> NULL
In main() the nextEdge is: (9, 8, 1) -> 
In main() numSets = 10
Printing whichSet array: 
whichSet Array = [1][2][3][2][5][6][7][8][8][10][11][12]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> NULL
In main() the nextEdge is: (3, 5, 2) -> 
In main() numSets = 9
Printing whichSet array: 
whichSet Array = [1][2][3][2][3][6][7][8][8][10][11][12]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> NULL
In main() the nextEdge is: (6, 7, 2) -> 
In main() numSets = 8
Printing whichSet array: 
whichSet Array = [1][2][3][2][3][6][6][8][8][10][11][12]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> NULL
In main() the nextEdge is: (8, 6, 2) -> 
In main() numSets = 7
Printing whichSet array: 
whichSet Array = [1][2][3][2][3][6][6][6][6][10][11][12]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> NULL
In main() the nextEdge is: (8, 10, 2) -> 
In main() numSets = 6
Printing whichSet array: 
whichSet Array = [1][2][3][2][3][6][6][6][6][6][11][12]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> NULL
In main() the nextEdge is: (12, 7, 2) -> 
In main() numSets = 5
Printing whichSet array: 
whichSet Array = [1][2][3][2][3][6][6][6][6][6][11][6]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> NULL
In main() the nextEdge is: (1, 6, 3) -> 
In main() numSets = 4
Printing whichSet array: 
whichSet Array = [1][2][3][2][3][1][1][1][1][1][11][1]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <1, 11, 3> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> NULL
In main() the nextEdge is: (1, 11, 3) -> 
In main() numSets = 3
Printing whichSet array: 
whichSet Array = [1][2][3][2][3][1][1][1][1][1][1][1]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <4, 3, 3> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> NULL
In main() the nextEdge is: (4, 3, 3) -> 
In main() numSets = 2
Printing whichSet array: 
whichSet Array = [1][2][2][2][2][1][1][1][1][1][1][1]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <7, 8, 3> -> <9, 10, 3> -> <5, 4, 4> -> <6, 12, 4> -> <1, 2, 5> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> NULL
In main() the nextEdge is: (1, 2, 5) -> 
In main() numSets = 1
Printing whichSet array: 
whichSet Array = [1][1][1][1][1][1][1][1][1][1][1][1]

In main(). Printing the remaining of edgeList:
listHead -> <0, 0, 0> -> <1, 4, 5> -> <5, 7, 5> -> <6, 4, 5> -> <9, 11, 5> -> <3, 2, 6> -> <10, 12, 7> -> NULL
In main(). Printing the growing MST list:
mstListHead -> <0, 0, 0> -> <2, 4, 1> -> <9, 8, 1> -> <3, 5, 2> -> <6, 7, 2> -> <8, 6, 2> -> <8, 10, 2> -> <12, 7, 2> -> <1, 6, 3> -> <1, 11, 3> -> <4, 3, 3> -> <1, 2, 5> -> NULL
